<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAACwAAABgAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAA
        ABsAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAAABgAAAALAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRjSTvIlYHitW5R/7VuUf+1blH/tW5R/7VuUf+1blH/tW5R/7Vu
        Uf+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf/GlYHkc0Y0VAAA
        ABgAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAypeD3PDg2f/26eP/9unj//bp4//26eP/9unj//bp
        4//26eP/9unj//bp4//26eP/9unj//bp4//26eP/9unj//bp4//26eP/9unj//bp4//26eP/9unj//Df
        2P/GlYHgAAAAHAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1blH879jM/+zRxP/s0cT/7NHE/+zR
        xP/s0cT/7NHE/+zRxP/s0cT/7NDE/+zQxP/s0MT/7NDE/+zQxP/s0MP/7NDD/+zQw/+1blH/yIpx/7Vu
        Uf/s0MP/79fM/7VuUfwAAAAcAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVuUf/t08f/7dPH/7Vu
        Uf/IinH/tW5R/7VuUf+1blH/tW5R/+3Sx/+1blH/yIpx/7VuUf+1blH/tW5R/7VuUf+1blH/7dLG/7Vu
        Uf/IinH/tW5R/+zSxf/s0sX/tW5R/wAAABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtW5R/+7V
        yf/u1cn/tW5R/8iKcf/IinH/yIpx/8iKcf/IinH/7tTJ/7VuUf/IinH/yIpx/8iKcf/IinH/yIpx/8iK
        cf/t1Mj/tW5R/8iKcf+1blH/7dTI/+3UyP+1blH/AAAAHAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC1blH/79fM/+/XzP+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf/u1sv/tW5R/7VuUf+1blH/tW5R/7Vu
        Uf+1blH/tW5R/+7Wy/+1blH/yIpx/7VuUf/u1sr/7tbK/7VuUf8AAAAcAAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALVuUf/v2c7/79nO/+/Zzv/v2M7/79jO/+/Yzv/v2M7/79jO/+/Yzv/v2M7/79jO/+/Y
        zv/v2M7/79jO/+/Yzf/v2M3/79jN/7VuUf/IinH/tW5R/+/Xzf/v183/tW5R/wAAABwAAAAJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtW5R//Db0f/w29H/tW5R/7VuUf/w2tD/tW5R/8iKcf/IinH/8NrQ/7Vu
        Uf/IinH/yIpx//Da0P+1blH/yIpx/8iKcf/w2tD/tW5R/8iKcf+1blH/8NnP//DZz/+1blH/AAAAHAAA
        AAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1blH/8dzT//Hc0/+1blH/tW5R//Hc0/+1blH/tW5R/7Vu
        Uf/x3NP/tW5R/7VuUf+1blH/8dzT/7VuUf+1blH/tW5R//Hc0v+1blH/yIpx/8iKcf/w29L/8NvS/7Vu
        Uf8AAAAcAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVuUf/y3tb/8t7W//Le1v/y3tX/8t7V//Le
        1f/y3tX/8t7V//He1f/x3tX/8d7V//He1f/x3tX/8d7V//He1f/x3tX/8d7V/7VuUf+1blH/tW5R//Hd
        1P/x3dT/tW5R/wAAABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtW5R//Lg2P/y4Nj/tW5R/7Vu
        Uf/y4Nj/tW5R/8iKcf/IinH/8uDX/7VuUf/IinH/yIpx//Lg1/+1blH/yIpx/8iKcf/y4Nf/8uDX//Lf
        1//y39f/8t/X//Lf1/+1blH/AAAAHAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1blH/8+Lb//Pi
        2/+1blH/tW5R//Pi2v+1blH/tW5R/7VuUf/z4tr/tW5R/7VuUf+1blH/8+La/7VuUf+1blH/tW5R//Ph
        2v+1blH/yIpx/7VuUf/z4dn/8+HZ/7VuUf8AAAAcAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVu
        Uf/05N3/9OTd//Tk3f/05N3/9OTd//Tk3f/05N3/9OTd//Tk3P/05Nz/9OTc//Tk3P/05Nz/9OPc//Tj
        3P/049z/9OPc/7VuUf/IinH/tW5R//Tj3P/049z/tW5R/wAAABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtW5R//Xm4P/15uD/AAD//wAA///15t//tW5R/8iKcf/IinH/9ebf/7VuUf/IinH/yIpx//Xm
        3/+1blH/yIpx/8iKcf/15d//tW5R/8iKcf/IinH/9OXe//Tl3v+1blH/AAAAHAAAAAkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC1blH/9uji//bo4v8AAP//AAD///bo4v+1blH/tW5R/7VuUf/16OH/tW5R/7Vu
        Uf+1blH/9ejh/7VuUf+1blH/tW5R//Xn4f+1blH/tW5R/7VuUf/15+H/9efh/7VuUf8AAAAcAAAACQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALVuUf/26uX/9url//bq5P/26uT/9urk//bq5P/26uT/9urk//bq
        5P/26uT/9urk//bq5P/26uT/9unj//bp4//26eP/9unj//bp4//26eP/9unj//bp4//26eP/tW5R/wAA
        ABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtW5R//fs5//37Of/AH///wB////37Of/tW5R/8iK
        cf/IinH/9+zm/7VuUf/IinH/yIpx//fs5v+1blH/yIpx/8iKcf/36+b/tW5R/8iKcf/IinH/9+vm//fr
        5v+1blH/AAAAHAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1blH/+O7p//ju6f8Af///AH////ju
        6f+1blH/tW5R/7VuUf/47en/tW5R/7VuUf+1blH/+O3o/7VuUf+1blH/tW5R//jt6P+1blH/tW5R/7Vu
        Uf/47ej/+O3o/7VuUf8AAAAcAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVuUf/58Oz/+fDs//nw
        7P/58Oz/+fDs//nw7P/58Oz/+e/r//nv6//57+v/+e/r//nv6//57+v/+e/r//nv6//57+v/+e/r//nv
        6//47+v/+O/r//jv6//47+v/tW5R/wAAABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtW5R//ry
        7v/68u7/+vLu//ry7v/68u7/+vLu//ry7v/58e7/+fHu//nx7v/58e7/+fHu//nx7f/58e3/+fHt//nx
        7f/58e3/+fHt//nx7f/58e3/+fHt//nx7f+1blH/AAAAHAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC1blH/+vTx//r08f8VTRb/FU0W/xVNFv8VTRb/FU0W/xVNFv8VTRb/FU0W/xVNFv8VTRb/FU0W/xVN
        Fv8VTRb/FU0W/xVNFv8VTRb/FU0W/xVNFv/68+//+vPv/7VuUf8AAAAcAAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALVuUf/79vP/+/bz/wOIBv9suW7/A4gG/wOIBv8DiAb/A4gG/wOIBv9YtFr/A4gG/y6e
        MP9YtFr/Lp4w/wOIBv8unjD/WLRa/y6eMP8DiAb/A4gG//v18v/79fL/tW5R/wAAABwAAAAJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtW5R//z49v/89/X/A4gG/3a+d/8DiAb/A4gG/wOIBv8DiAb/A4gG/1i0
        Wv8DiAb/WLRa/wOIBv9YtFr/A4gG/1i0Wv8DiAb/WLRa/wOIBv8DiAb//Pf0//z39P+1blH/AAAAHAAA
        AAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1blH//fr4//35+P8DiAb/gMOB/wOIBv8DiAb/A4gG/wOI
        Bv8DiAb/WLRa/wOIBv9YtFr/A4gG/1i0Wv8DiAb/WLRa/wOIBv9YtFr/A4gG/wOIBv/8+ff//Pn3/7Vu
        Uf8AAAAcAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVuUf/+/Pv//vv6/wOIBv+Kx4v/A4gG/wOI
        Bv8DiAb/A4gG/wOIBv9YtFr/A4gG/1i0Wv8DiAb/WLRa/wOIBv9YtFr/A4gG/1i0Wv8DiAb/A4gG//37
        +f/9+/n/tW5R/wAAABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtW5R//7+/f/+/f3/A4gG/5TM
        lf+Kx4z/gsOD/3i/ev9wu3H/ZrZo/1i0Wv9Urlb/Ua9T/1i0Wv9Iqkr/L50x/z+mQf9YtFr/NaI4/wuM
        Dv8DiAb//vz8//78/P+1blH/AAAAHAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1blH/////////
        //8DiAb/A4gG/wOIBv8DiAb/A4gG/wOIBv8DiAb/A4gG/wOIBv8DiAb/A4gG/wOIBv8DiAb/A4gG/wOI
        Bv8DiAb/A4gG/wOIBv///v7///7+/7VuUf8AAAAcAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVu
        Ufz9/Pv/////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////9/Pv/tW5R/AAAABgAAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAy5eE2+/f2f//////////////////////////////////////////////////////////////
        /////////////////////////////////////////////+/f2f/HloHfAAAACwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACzbVA2ypiC3bVuUf+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf+1blH/tW5R/7Vu
        Uf+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf+1blH/tW5R/7VuUf+1blH/yZeC36RjSTsAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAD/////8=
</value>
  </data>
</root>